from flask import Flask, request, jsonify
import jwt
import datetime

app = Flask(__name__)
SECRET_KEY = 'your_secret_key_here'

def encode_auth_token(user_id):
    payload = {
        'exp': datetime.datetime.utcnow() + datetime.timedelta(hours=1),
        'iat': datetime.datetime.utcnow(),
        'sub': user_id
    }
    return jwt.encode(payload, SECRET_KEY, algorithm='HS256')

def decode_auth_token(token):
    try:
        payload = jwt.decode(token, SECRET_KEY, algorithms=['HS256'])
        return payload['sub']
    except jwt.ExpiredSignatureError:
        return 'Signature expired.'
    except jwt.InvalidTokenError:
        return 'Invalid token.'

@app.route('/login', methods=['POST'])
def login():
    # Authenticate user here (dummy)
    user_id = request.json.get('user_id')
    token = encode_auth_token(user_id)
    return jsonify({'token': token})

@app.route('/secure-data', methods=['GET'])
def secure_data():
    token = request.headers.get('Authorization').split()[1]
    user_id = decode_auth_token(token)
    if isinstance(user_id, str):
        return jsonify({'error': user_id}), 401
    # Return protected data
    return jsonify({'message': f'Hello user {user_id}'})


if __name__ == '__main__':
    app.run(debug=True)
